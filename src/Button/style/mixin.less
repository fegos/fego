// mixins for button
// ------------------------
.button-size(@height; @padding; @font-size; @border-radius) {
    padding: @padding;
    font-size: @font-size;
    border-radius: @border-radius;
    height: @height;
}

.button-color(@color; @background; @border) {
    color: @color;
    background-color: @background;
    border-color: @border; // a inside Button which only work in Chrome
    // http://stackoverflow.com/a/17253457
    >a:only-child {
        color: currentColor;
        &:after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            background: transparent;
        }
    }
}

.button-primary-pseudo(@color; @background; @border) {
	&:hover,
    &:focus {
        .button-color(@color; ~`colorPalette("@{background}", 5)`; ~`colorPalette("@{border}", 5)`);
    }
    &:active,
    &.active {
        .button-color(@color; ~`colorPalette("@{background}", 7)`; ~`colorPalette("@{border}", 7)`);
	}
	&.disabled,
    &[disabled] {
        &:hover,
        &:focus,
        &:active,
        &.active {
            .button-color(@btn-disable-color; ~`colorPalette("@{background}", 4)`; ~`colorPalette("@{background}", 4)`);
        }
    }
}

.button-primary(@color; @background; @border) {
	.button-color(@color; @background; @border);
	&.disabled,
    &[disabled] {
        .button-color(@btn-disable-color; ~`colorPalette("@{background}", 4)`; ~`colorPalette("@{border}", 4)`);
    }
}

.button-danger-pseudo(@color; @background; @border) {
	&:hover,
    &:focus {
        .button-color(@color; @background; @border);
    }
    &:active,
    &.active {
        .button-color(@color; ~`colorPalette("@{background}", 7)`; ~`colorPalette("@{border}", 7)`; );
	}
	&.disabled,
    &[disabled] {
        &:hover,
        &:focus,
        &:active,
        &.active {
            .button-color(@btn-disable-color; ~`colorPalette("@{btn-danger-bg}", 4)`; ~`colorPalette("@{btn-danger-border}", 4)`);
        }
    }
}

.button-danger(@color; @background; @border) {
	.button-color(@color; @background; @border);
	&.disabled,
	&[disabled] {
		.button-color(@btn-disable-color; ~`colorPalette("@{background}", 4)`; ~`colorPalette("@{border}", 4)`);
	}
}

.button-ghost-pseudo(@color; @border) {
	&:hover,
    &:focus {
        .button-color(~`colorPalette("@{color}", 5)`; transparent; ~`colorPalette("@{border}", 5)`);
    }
    &:active,
    &.active {
        .button-color(~`colorPalette("@{color}", 7)`; transparent; ~`colorPalette("@{border}", 7)`);
	}
	&.disabled,
    &[disabled] {
        &:hover,
        &:focus,
        &:active,
        &.active {
            .button-color(@btn-disable-color; transparent; ~`colorPalette("@{border}", 4)`);
        }
    }
}

.button-ghost(@color; @border) {
	.button-color(@color; transparent; @border);
	&.disabled,
	&[disabled] {
		.button-color(@btn-disable-color; transparent; ~`colorPalette("@{border}", 4)`);
	}
}

.btn() {
    display: inline-block;
    margin-bottom: 0;
    font-weight: @btn-font-weight;
    text-align: center;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none;
    border: @border-width-base @border-style-base transparent;
    white-space: nowrap;
    line-height: 1.15; // https://github.com/ant-design/ant-design/issues/7070
    .button-size(@btn-height-base; @btn-padding-base; @font-size-base; @btn-border-radius-base);
    user-select: none;
    transition: all .3s @ease-in-out;
    position: relative;
    >.@{iconfont-css-prefix} {
        line-height: 1;
    }
    &,
    &:active,
    &:focus {
        outline: 0;
    }
    &:not([disabled]):hover {
        text-decoration: none;
    }
    &:not([disabled]):active {
        outline: 0;
        transition: none;
    }
    &.disabled,
    &[disabled] {
        cursor: not-allowed;
        >* {
            pointer-events: none;
        }
    }
    &-lg {
        .button-size(@btn-height-lg; @btn-padding-lg; @btn-font-size-lg; @btn-border-radius-base);
    }
    &-sm {
        .button-size(@btn-height-sm; @btn-padding-sm; @font-size-base; @btn-border-radius-sm);
    }
} 

.btn-default-pseudo() {
 	&:hover,
    &:focus {
        .button-color(@primary-color; @btn-default-bg; @primary-color);
    }
    &:active,
    &.active {
        .button-color(@primary-7; @btn-default-bg; @primary-7);
	}
	&.disabled,
    &[disabled] {
        &:hover,
        &:focus,
        &:active,
        &.active {
            .button-color(@btn-disable-color; @btn-disable-bg; @btn-disable-border);
        }
    }
}

.btn-default() {
	.button-color(@btn-default-color; @btn-default-bg; @btn-default-border);
	&.disabled,
	&[disabled] {
		.button-color(@btn-disable-color; @btn-disable-bg; @btn-disable-border);
	}
} 

// circle button: the content only contains icon
.btn-circle(@btnClassName: btn) {
    .square(@btn-circle-size);
    .button-size(@btn-circle-size;
    0;
    @font-size-base + 2px;
    50%);
    &.@{btnClassName}-lg {
        .square(@btn-circle-size-lg);
        .button-size(@btn-circle-size-lg;
        0;
        @btn-font-size-lg + 2px;
        50%);
    }
    &.@{btnClassName}-sm {
        .square(@btn-circle-size-sm);
        .button-size(@btn-circle-size-sm;
        0;
        @font-size-base;
        50%);
    }
} 

// Horizontal button groups styl
// --------------------------------------------------
.button-group-base(@btnClassName) {
    position: relative;
    display: inline-block;
    >.@{btnClassName} {
        position: relative;
        z-index: 1;
        &:hover,
        &:focus,
        &:active,
        &.active {
            z-index: 2;
        }
        &:disabled {
            z-index: 0;
        }
    } // size
    &-lg>.@{btnClassName} {
        .button-size(@btn-height-lg; @btn-padding-lg; @btn-font-size-lg; @btn-border-radius-base);
    }
    &-sm>.@{btnClassName} {
        .button-size(@btn-height-sm; @btn-padding-sm; @font-size-base; @btn-border-radius-sm);
        >.@{iconfont-css-prefix} {
            font-size: @font-size-base;
        }
    }
} 

.btn-group(@btnClassName: btn) {
    .button-group-base(@btnClassName);
    .@{btnClassName}+.@{btnClassName},
    .@{btnClassName}+&,
    &+.@{btnClassName},
    &+& {
        margin-left: -1px;
    }
    .@{btnClassName}:not(:first-child):not(:last-child) {
        border-radius: 0;
        padding-left: 8px;
        padding-right: 8px;
    }
    >.@{btnClassName}:first-child {
        margin-left: 0;
        &:not(:last-child) {
            border-bottom-right-radius: 0;
            border-top-right-radius: 0;
            padding-right: 8px;
        }
    }
    >.@{btnClassName}:last-child:not(:first-child) {
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
        padding-left: 8px;
    }
    &>& {
        float: left;
    }
    &>&:not(:first-child):not(:last-child)>.@{btnClassName} {
        border-radius: 0;
    }
    &>&:first-child:not(:last-child) {
        >.@{btnClassName}:last-child {
            border-bottom-right-radius: 0;
            border-top-right-radius: 0;
            padding-right: 8px;
        }
    }
    &>&:last-child:not(:first-child)>.@{btnClassName}:first-child {
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
        padding-left: 8px;
    }
}